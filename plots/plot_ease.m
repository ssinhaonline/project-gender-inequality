%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_Easiness.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/02/04 06:13:43

%% Initialize variables.
filename = '/home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_Easiness.csv';
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
all_n = dataArray{:, 1};
all_corr = dataArray{:, 2};
all_p_val = dataArray{:, 3};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;


%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_EasinessF.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/02/04 06:13:43

%% Initialize variables.
filename = '/home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_EasinessF.csv';
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
female_n = dataArray{:, 1};
female_corr = dataArray{:, 2};
female_p_val = dataArray{:, 3};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;

%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_EasinessM.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/02/04 06:13:43

%% Initialize variables.
filename = '/home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_EasinessM.csv';
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
male_n = dataArray{:, 1};
male_corr = dataArray{:, 2};
male_p_val = dataArray{:, 3};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;


%% Plot data into 3 figures

% subplot(3,1,1)
% plot(all_n, all_corr)
% title('All: Corr(avg(comment.easiness[1 : n-1]), comment.easiness[n]) v n')
% subplot(3,1,2)
figure;plot(male_n(1:1031), smooth(male_corr(1:1031), 10));
hold on;
% title('Male: Corr(avg(comment.easiness[1 : n-1]), comment.easiness[n]) v n')
% subplot(3,1,3)
plot(female_n, smooth(female_corr, 10));
% title('Female: Corr(avg(comment.easiness[1 : n-1]), comment.easiness[n]) v n')

% y = smooth((male_corr(1:1031,:) - female_corr), 10);
% belowCut = y;
% belowCut(y > 0) = NaN;
% figure;plot(female_n, y, 'r', female_n, belowCut, 'b')