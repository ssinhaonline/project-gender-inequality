%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_Helpful.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/02/04 06:13:43

%% Initialize variables.
filename = '/home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_Helpful.csv';
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray1 = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
all_n = dataArray1{:, 1};
all_corr = dataArray1{:, 2};
all_p_val = dataArray1{:, 3};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray1 ans;


%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_HelpfulF.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/02/04 06:13:43

%% Initialize variables.
filename = '/home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_HelpfulF.csv';
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray1 = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
female_n1 = dataArray1{:, 1};
female_corr1 = dataArray1{:, 2};
female_p_val1 = dataArray1{:, 3};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray1 ans;

%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_HelpfulM.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/02/04 06:13:43

%% Initialize variables.
filename = '/home/datalab01/Desktop/Souradeep_Docs/Thesis/project-gender-inequality/fixtures/all_csv/Comment_history_correlation_HelpfulM.csv';
delimiter = ',';
startRow = 2;

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray1 = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
male_n1 = dataArray1{:, 1};
male_corr1 = dataArray1{:, 2};
male_p_val1 = dataArray1{:, 3};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray1 ans;


%% Plot data into 3 subplots

% y = smooth((male_corr1(1:1031,:) - female_corr1), 10);
% belowCut = y;
% belowCut(y > 0) = NaN;
% figure;plot(female_n1, y, 'r', female_n1, belowCut, 'b'

%%plot(female_n, smooth((female_corr), 10))
%%title('Female: Corr(avg(comment.helpfulness[1 : n-1]), comment.helpfulness[n]) v n')
figure;plot(male_n1(1:1031,:), smooth(male_corr1(1:1031,:), 10));
hold on;
plot(female_n1, smooth(female_corr1, 10));